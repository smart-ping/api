version: '3'
services:
  nats:
    container_name: nats
    image: nats:latest
  #  ports:
  #    - 4222:4222
  #    - 8222:8222 
  #    - 6222:6222

  mongo:
    container_name: mongo
    image: mongo:latest
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
      - MONGODB_USER=root 
      - MONGODB_PASS=1234
    volumes:
      - ./data/db:/data/db
  #  ports:
  #      - 27017:27017
    command: mongod --smallfiles --logpath=/dev/null

#  mongo-express:
#    container_name: mongo-express
#    image: mongo-express:latest
#    depends_on:
#      - mongo
#    ports:
#      - 8081:8081
#    restart: always
  
  api:
    container_name: api
    build:
      context: .
      dockerfile: Dockerfile
    image: backend
    depends_on:
      - mongo
      - nats
  #  ports: 
  #    - 8080:8080
    environment:
      - MONGO_URL=mongodb://mongo:27017/checks
      - NATS_URL=nats://nats:4222
    entrypoint: npm run api
    restart: always

  server:
    container_name: server
    image: backend
    depends_on:
      - mongo
      - nats
    environment:
      - MONGO_URL=mongodb://mongo:27017/checks
      - NATS_URL=nats://nats:4222
    entrypoint: npm run server
    restart: always

  worker:
    container_name: worker
    image: backend
    depends_on:
      - mongo
      - nats
    environment:
      - MONGO_URL=mongodb://mongo:27017/checks
      - NATS_URL=nats://nats:4222
    entrypoint: npm run worker
    restart: always
  
  front:
    container_name: front
    image: front
    depends_on:
      - mongo
      - nats
      - api
    ports: 
      - 3000:3000
    environment:
      - API_AUTH_URL=http://api:8080
      - API_DATA_URL=http://api:8080
      - HOST=0.0.0.0
    restart: always